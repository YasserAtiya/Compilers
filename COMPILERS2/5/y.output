
state 0
	$accept : _prog $end 
	externs : _    (2)

	.  reduce 2

	prog  goto 1
	externs  goto 2

state 1
	$accept :  prog_$end 

	$end  accept
	.  error


state 2
	prog :  externs_    (1)
	externs :  externs_extern 

	ID  shift 12
	CHAR  shift 8
	DOUBLE  shift 9
	INT  shift 10
	.  reduce 1

	func  goto 5
	dcl  goto 4
	fhead  goto 7
	fname  goto 11
	type  goto 6
	extern  goto 3

state 3
	externs :  externs extern_    (3)

	.  reduce 3


state 4
	extern :  dcl_; 
	dcl :  dcl_, dclr 

	;  shift 13
	,  shift 14
	.  error


state 5
	extern :  func_    (5)

	.  reduce 5


state 6
	dcl :  type_dclr 
	fname :  type_ID 

	ID  shift 16
	.  error

	dclr  goto 15

state 7
	func :  fhead_stmts } m 
	stmts : _    (28)

	.  reduce 28

	stmts  goto 17

state 8
	type :  CHAR_    (13)

	.  reduce 13


state 9
	type :  DOUBLE_    (14)

	.  reduce 14


state 10
	type :  INT_    (15)

	.  reduce 15


state 11
	fhead :  fname_fargs { dcls 

	(  shift 19
	.  error

	fargs  goto 18

state 12
	fname :  ID_    (19)

	.  reduce 19


state 13
	extern :  dcl ;_    (4)

	.  reduce 4


state 14
	dcl :  dcl ,_dclr 

	ID  shift 21
	.  error

	dclr  goto 20

state 15
	dcl :  type dclr_    (8)

	.  reduce 8


state 16
	dclr :  ID_    (10)
	dclr :  ID_[ ] 
	dclr :  ID_[ CON ] 
	fname :  type ID_    (18)

	[  shift 22
	(  reduce 18
	.  reduce 10


state 17
	func :  fhead stmts_} m 
	stmts :  stmts_m lblstmt 
	m : _    (25)

	}  shift 23
	.  reduce 25

	m  goto 24

state 18
	fhead :  fname fargs_{ dcls 

	{  shift 25
	.  error


state 19
	fargs :  (_) 
	fargs :  (_args ) 

	CHAR  shift 8
	DOUBLE  shift 9
	INT  shift 10
	)  shift 26
	.  error

	args  goto 27
	type  goto 28

state 20
	dcl :  dcl , dclr_    (9)

	.  reduce 9


state 21
	dclr :  ID_    (10)
	dclr :  ID_[ ] 
	dclr :  ID_[ CON ] 

	[  shift 22
	.  reduce 10


state 22
	dclr :  ID [_] 
	dclr :  ID [_CON ] 

	CON  shift 30
	]  shift 29
	.  error


state 23
	func :  fhead stmts }_m 
	m : _    (25)

	.  reduce 25

	m  goto 31

state 24
	stmts :  stmts m_lblstmt 

	ID  shift 46
	CON  shift 52
	STR  shift 53
	FOR  shift 39
	IF  shift 36
	RETURN  shift 43
	WHILE  shift 37
	DO  shift 38
	CONTINUE  shift 40
	BREAK  shift 41
	GOTO  shift 42
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	;  shift 45
	{  shift 54
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 35
	lblstmt  goto 32
	stmt  goto 33
	block  goto 44
	labels  goto 34

state 25
	fhead :  fname fargs {_dcls 
	dcls : _    (6)

	.  reduce 6

	dcls  goto 55

state 26
	fargs :  ( )_    (20)

	.  reduce 20


state 27
	fargs :  ( args_) 
	args :  args_, type dclr 

	,  shift 57
	)  shift 56
	.  error


state 28
	args :  type_dclr 

	ID  shift 21
	.  error

	dclr  goto 58

state 29
	dclr :  ID [ ]_    (11)

	.  reduce 11


state 30
	dclr :  ID [ CON_] 

	]  shift 59
	.  error


state 31
	func :  fhead stmts } m_    (16)

	.  reduce 16


state 32
	stmts :  stmts m lblstmt_    (29)

	.  reduce 29


state 33
	lblstmt :  stmt_    (30)

	.  reduce 30


state 34
	lblstmt :  labels_stmt 
	labels :  labels_ID : 

	ID  shift 61
	CON  shift 52
	STR  shift 53
	FOR  shift 39
	IF  shift 36
	RETURN  shift 43
	WHILE  shift 37
	DO  shift 38
	CONTINUE  shift 40
	BREAK  shift 41
	GOTO  shift 42
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	;  shift 45
	{  shift 54
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 35
	stmt  goto 60
	block  goto 44

state 35
	stmt :  expr_; 
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	BITOR  shift 63
	BITXOR  shift 64
	BITAND  shift 65
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	;  shift 62
	.  error


state 36
	stmt :  IF_( cexpr ) m stmt 
	stmt :  IF_( cexpr ) m stmt ELSE n m stmt 

	(  shift 73
	.  error


state 37
	stmt :  WHILE_( m cexpr ) m s stmt 

	(  shift 74
	.  error


state 38
	stmt :  DO_m s stmt WHILE ( m cexpr ) ; 
	m : _    (25)

	.  reduce 25

	m  goto 75

state 39
	stmt :  FOR_( expro ; m cexpro ; m expro n ) m s stmt 

	(  shift 76
	.  error


state 40
	stmt :  CONTINUE_; 

	;  shift 77
	.  error


state 41
	stmt :  BREAK_; 

	;  shift 78
	.  error


state 42
	stmt :  GOTO_ID ; 

	ID  shift 79
	.  error


state 43
	stmt :  RETURN_; 
	stmt :  RETURN_expr ; 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	;  shift 80
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 81

state 44
	stmt :  block_    (45)

	.  reduce 45


state 45
	stmt :  ;_    (46)

	.  reduce 46


state 46
	labels :  ID_: 
	expr :  ID_( ) 
	expr :  ID_( exprs ) 
	lval :  ID_    (93)
	lval :  ID_[ expr ] 

	[  shift 85
	(  shift 84
	:  shift 83
	.  reduce 93


state 47
	expr :  lval_SET expr 
	expr :  lval_SETOR expr 
	expr :  lval_SETXOR expr 
	expr :  lval_SETAND expr 
	expr :  lval_SETLSH expr 
	expr :  lval_SETRSH expr 
	expr :  lval_SETADD expr 
	expr :  lval_SETSUB expr 
	expr :  lval_SETMUL expr 
	expr :  lval_SETDIV expr 
	expr :  lval_SETMOD expr 
	expr :  lval_    (87)

	SET  shift 86
	SETOR  shift 87
	SETXOR  shift 88
	SETAND  shift 89
	SETLSH  shift 90
	SETRSH  shift 91
	SETADD  shift 92
	SETSUB  shift 93
	SETMUL  shift 94
	SETDIV  shift 95
	SETMOD  shift 96
	.  reduce 87


state 48
	expr :  BITAND_lval 

	ID  shift 98
	.  error

	lval  goto 97

state 49
	expr :  SUB_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 99

state 50
	expr :  COM_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 100

state 51
	expr :  (_expr ) 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 101

state 52
	expr :  CON_    (91)

	.  reduce 91


state 53
	expr :  STR_    (92)

	.  reduce 92


state 54
	block :  {_stmts } 
	stmts : _    (28)

	.  reduce 28

	stmts  goto 102

state 55
	dcls :  dcls_dcl ; 
	fhead :  fname fargs { dcls_    (17)

	CHAR  shift 8
	DOUBLE  shift 9
	INT  shift 10
	.  reduce 17

	dcl  goto 103
	type  goto 104

state 56
	fargs :  ( args )_    (21)

	.  reduce 21


state 57
	args :  args ,_type dclr 

	CHAR  shift 8
	DOUBLE  shift 9
	INT  shift 10
	.  error

	type  goto 105

state 58
	args :  type dclr_    (22)

	.  reduce 22


state 59
	dclr :  ID [ CON ]_    (12)

	.  reduce 12


state 60
	lblstmt :  labels stmt_    (31)

	.  reduce 31


state 61
	labels :  labels ID_: 
	expr :  ID_( ) 
	expr :  ID_( exprs ) 
	lval :  ID_    (93)
	lval :  ID_[ expr ] 

	[  shift 85
	(  shift 84
	:  shift 106
	.  reduce 93


state 62
	stmt :  expr ;_    (34)

	.  reduce 34


state 63
	expr :  expr BITOR_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 107

state 64
	expr :  expr BITXOR_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 108

state 65
	expr :  expr BITAND_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 109

state 66
	expr :  expr LSH_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 110

state 67
	expr :  expr RSH_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 111

state 68
	expr :  expr MOD_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 112

state 69
	expr :  expr ADD_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 113

state 70
	expr :  expr SUB_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 114

state 71
	expr :  expr MUL_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 115

state 72
	expr :  expr DIV_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 116

state 73
	stmt :  IF (_cexpr ) m stmt 
	stmt :  IF (_cexpr ) m stmt ELSE n m stmt 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	NOT  shift 119
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 118
	cexpr  goto 117

state 74
	stmt :  WHILE (_m cexpr ) m s stmt 
	m : _    (25)

	.  reduce 25

	m  goto 120

state 75
	stmt :  DO m_s stmt WHILE ( m cexpr ) ; 
	s : _    (24)

	.  reduce 24

	s  goto 121

state 76
	stmt :  FOR (_expro ; m cexpro ; m expro n ) m s stmt 
	expro : _    (61)

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  reduce 61

	lval  goto 47
	expr  goto 123
	expro  goto 122

state 77
	stmt :  CONTINUE ;_    (40)

	.  reduce 40


state 78
	stmt :  BREAK ;_    (41)

	.  reduce 41


state 79
	stmt :  GOTO ID_; 

	;  shift 124
	.  error


state 80
	stmt :  RETURN ;_    (43)

	.  reduce 43


state 81
	stmt :  RETURN expr_; 
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	BITOR  shift 63
	BITXOR  shift 64
	BITAND  shift 65
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	;  shift 125
	.  error


state 82
	expr :  ID_( ) 
	expr :  ID_( exprs ) 
	lval :  ID_    (93)
	lval :  ID_[ expr ] 

	[  shift 85
	(  shift 84
	.  reduce 93


state 83
	labels :  ID :_    (32)

	.  reduce 32


state 84
	expr :  ID (_) 
	expr :  ID (_exprs ) 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	)  shift 126
	.  error

	lval  goto 47
	expr  goto 128
	exprs  goto 127

state 85
	lval :  ID [_expr ] 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 129

state 86
	expr :  lval SET_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 130

state 87
	expr :  lval SETOR_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 131

state 88
	expr :  lval SETXOR_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 132

state 89
	expr :  lval SETAND_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 133

state 90
	expr :  lval SETLSH_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 134

state 91
	expr :  lval SETRSH_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 135

state 92
	expr :  lval SETADD_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 136

state 93
	expr :  lval SETSUB_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 137

state 94
	expr :  lval SETMUL_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 138

state 95
	expr :  lval SETDIV_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 139

state 96
	expr :  lval SETMOD_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 140

state 97
	expr :  BITAND lval_    (84)

	.  reduce 84


state 98
	lval :  ID_    (93)
	lval :  ID_[ expr ] 

	[  shift 85
	.  reduce 93


state 99
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 
	expr :  SUB expr_    (85)

	.  reduce 85


state 100
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 
	expr :  COM expr_    (86)

	.  reduce 86


state 101
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 
	expr :  ( expr_) 

	BITOR  shift 63
	BITXOR  shift 64
	BITAND  shift 65
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	)  shift 141
	.  error


state 102
	block :  { stmts_} 
	stmts :  stmts_m lblstmt 
	m : _    (25)

	}  shift 142
	.  reduce 25

	m  goto 24

state 103
	dcls :  dcls dcl_; 
	dcl :  dcl_, dclr 

	;  shift 143
	,  shift 14
	.  error


state 104
	dcl :  type_dclr 

	ID  shift 21
	.  error

	dclr  goto 15

state 105
	args :  args , type_dclr 

	ID  shift 21
	.  error

	dclr  goto 144

state 106
	labels :  labels ID :_    (33)

	.  reduce 33


state 107
	expr :  expr_BITOR expr 
	expr :  expr BITOR expr_    (74)
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	BITXOR  shift 64
	BITAND  shift 65
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 74


state 108
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr BITXOR expr_    (75)
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	BITAND  shift 65
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 75


state 109
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr BITAND expr_    (76)
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 76


state 110
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr LSH expr_    (77)
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 77


state 111
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr RSH expr_    (78)
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 78


state 112
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr MOD expr_    (79)
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	.  reduce 79


state 113
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr ADD expr_    (80)
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 80


state 114
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr SUB expr_    (81)
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 81


state 115
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr MUL expr_    (82)
	expr :  expr_DIV expr 

	.  reduce 82


state 116
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 
	expr :  expr DIV expr_    (83)

	.  reduce 83


state 117
	stmt :  IF ( cexpr_) m stmt 
	stmt :  IF ( cexpr_) m stmt ELSE n m stmt 
	cexpr :  cexpr_AND m cexpr 
	cexpr :  cexpr_OR m cexpr 

	OR  shift 147
	AND  shift 146
	)  shift 145
	.  error


state 118
	cexpr :  expr_EQ expr 
	cexpr :  expr_NE expr 
	cexpr :  expr_LE expr 
	cexpr :  expr_GE expr 
	cexpr :  expr_LT expr 
	cexpr :  expr_GT expr 
	cexpr :  expr_    (58)
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	BITOR  shift 63
	BITXOR  shift 64
	BITAND  shift 65
	EQ  shift 148
	NE  shift 149
	GT  shift 153
	GE  shift 151
	LT  shift 152
	LE  shift 150
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 58


state 119
	cexpr :  NOT_cexpr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	NOT  shift 119
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 118
	cexpr  goto 154

state 120
	stmt :  WHILE ( m_cexpr ) m s stmt 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	NOT  shift 119
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 118
	cexpr  goto 155

state 121
	stmt :  DO m s_stmt WHILE ( m cexpr ) ; 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	FOR  shift 39
	IF  shift 36
	RETURN  shift 43
	WHILE  shift 37
	DO  shift 38
	CONTINUE  shift 40
	BREAK  shift 41
	GOTO  shift 42
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	;  shift 45
	{  shift 54
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 35
	stmt  goto 156
	block  goto 44

state 122
	stmt :  FOR ( expro_; m cexpro ; m expro n ) m s stmt 

	;  shift 157
	.  error


state 123
	expro :  expr_    (62)
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	BITOR  shift 63
	BITXOR  shift 64
	BITAND  shift 65
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 62


state 124
	stmt :  GOTO ID ;_    (42)

	.  reduce 42


state 125
	stmt :  RETURN expr ;_    (44)

	.  reduce 44


state 126
	expr :  ID ( )_    (88)

	.  reduce 88


state 127
	exprs :  exprs_, expr 
	expr :  ID ( exprs_) 

	,  shift 158
	)  shift 159
	.  error


state 128
	exprs :  expr_    (59)
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	BITOR  shift 63
	BITXOR  shift 64
	BITAND  shift 65
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 59


state 129
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 
	lval :  ID [ expr_] 

	BITOR  shift 63
	BITXOR  shift 64
	BITAND  shift 65
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	]  shift 160
	.  error


state 130
	expr :  lval SET expr_    (63)
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	BITOR  shift 63
	BITXOR  shift 64
	BITAND  shift 65
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 63


state 131
	expr :  lval SETOR expr_    (64)
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	BITOR  shift 63
	BITXOR  shift 64
	BITAND  shift 65
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 64


state 132
	expr :  lval SETXOR expr_    (65)
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	BITOR  shift 63
	BITXOR  shift 64
	BITAND  shift 65
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 65


state 133
	expr :  lval SETAND expr_    (66)
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	BITOR  shift 63
	BITXOR  shift 64
	BITAND  shift 65
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 66


state 134
	expr :  lval SETLSH expr_    (67)
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	BITOR  shift 63
	BITXOR  shift 64
	BITAND  shift 65
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 67


state 135
	expr :  lval SETRSH expr_    (68)
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	BITOR  shift 63
	BITXOR  shift 64
	BITAND  shift 65
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 68


state 136
	expr :  lval SETADD expr_    (69)
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	BITOR  shift 63
	BITXOR  shift 64
	BITAND  shift 65
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 69


state 137
	expr :  lval SETSUB expr_    (70)
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	BITOR  shift 63
	BITXOR  shift 64
	BITAND  shift 65
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 70


state 138
	expr :  lval SETMUL expr_    (71)
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	BITOR  shift 63
	BITXOR  shift 64
	BITAND  shift 65
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 71


state 139
	expr :  lval SETDIV expr_    (72)
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	BITOR  shift 63
	BITXOR  shift 64
	BITAND  shift 65
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 72


state 140
	expr :  lval SETMOD expr_    (73)
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	BITOR  shift 63
	BITXOR  shift 64
	BITAND  shift 65
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 73


state 141
	expr :  ( expr )_    (90)

	.  reduce 90


state 142
	block :  { stmts }_    (27)

	.  reduce 27


state 143
	dcls :  dcls dcl ;_    (7)

	.  reduce 7


state 144
	args :  args , type dclr_    (23)

	.  reduce 23


state 145
	stmt :  IF ( cexpr )_m stmt 
	stmt :  IF ( cexpr )_m stmt ELSE n m stmt 
	m : _    (25)

	.  reduce 25

	m  goto 161

state 146
	cexpr :  cexpr AND_m cexpr 
	m : _    (25)

	.  reduce 25

	m  goto 162

state 147
	cexpr :  cexpr OR_m cexpr 
	m : _    (25)

	.  reduce 25

	m  goto 163

state 148
	cexpr :  expr EQ_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 164

state 149
	cexpr :  expr NE_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 165

state 150
	cexpr :  expr LE_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 166

state 151
	cexpr :  expr GE_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 167

state 152
	cexpr :  expr LT_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 168

state 153
	cexpr :  expr GT_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 169

state 154
	cexpr :  cexpr_AND m cexpr 
	cexpr :  cexpr_OR m cexpr 
	cexpr :  NOT cexpr_    (57)

	.  reduce 57


state 155
	stmt :  WHILE ( m cexpr_) m s stmt 
	cexpr :  cexpr_AND m cexpr 
	cexpr :  cexpr_OR m cexpr 

	OR  shift 147
	AND  shift 146
	)  shift 170
	.  error


state 156
	stmt :  DO m s stmt_WHILE ( m cexpr ) ; 

	WHILE  shift 171
	.  error


state 157
	stmt :  FOR ( expro ;_m cexpro ; m expro n ) m s stmt 
	m : _    (25)

	.  reduce 25

	m  goto 172

state 158
	exprs :  exprs ,_expr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 173

state 159
	expr :  ID ( exprs )_    (89)

	.  reduce 89


state 160
	lval :  ID [ expr ]_    (94)

	.  reduce 94


state 161
	stmt :  IF ( cexpr ) m_stmt 
	stmt :  IF ( cexpr ) m_stmt ELSE n m stmt 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	FOR  shift 39
	IF  shift 36
	RETURN  shift 43
	WHILE  shift 37
	DO  shift 38
	CONTINUE  shift 40
	BREAK  shift 41
	GOTO  shift 42
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	;  shift 45
	{  shift 54
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 35
	stmt  goto 174
	block  goto 44

state 162
	cexpr :  cexpr AND m_cexpr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	NOT  shift 119
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 118
	cexpr  goto 175

state 163
	cexpr :  cexpr OR m_cexpr 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	NOT  shift 119
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 118
	cexpr  goto 176

state 164
	cexpr :  expr EQ expr_    (49)
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	BITOR  shift 63
	BITXOR  shift 64
	BITAND  shift 65
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 49


state 165
	cexpr :  expr NE expr_    (50)
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	BITOR  shift 63
	BITXOR  shift 64
	BITAND  shift 65
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 50


state 166
	cexpr :  expr LE expr_    (51)
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	BITOR  shift 63
	BITXOR  shift 64
	BITAND  shift 65
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 51


state 167
	cexpr :  expr GE expr_    (52)
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	BITOR  shift 63
	BITXOR  shift 64
	BITAND  shift 65
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 52


state 168
	cexpr :  expr LT expr_    (53)
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	BITOR  shift 63
	BITXOR  shift 64
	BITAND  shift 65
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 53


state 169
	cexpr :  expr GT expr_    (54)
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	BITOR  shift 63
	BITXOR  shift 64
	BITAND  shift 65
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 54


state 170
	stmt :  WHILE ( m cexpr )_m s stmt 
	m : _    (25)

	.  reduce 25

	m  goto 177

state 171
	stmt :  DO m s stmt WHILE_( m cexpr ) ; 

	(  shift 178
	.  error


state 172
	stmt :  FOR ( expro ; m_cexpro ; m expro n ) m s stmt 
	cexpro : _    (47)

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	NOT  shift 119
	COM  shift 50
	(  shift 51
	.  reduce 47

	lval  goto 47
	expr  goto 118
	cexpr  goto 180
	cexpro  goto 179

state 173
	exprs :  exprs , expr_    (60)
	expr :  expr_BITOR expr 
	expr :  expr_BITXOR expr 
	expr :  expr_BITAND expr 
	expr :  expr_LSH expr 
	expr :  expr_RSH expr 
	expr :  expr_MOD expr 
	expr :  expr_ADD expr 
	expr :  expr_SUB expr 
	expr :  expr_MUL expr 
	expr :  expr_DIV expr 

	BITOR  shift 63
	BITXOR  shift 64
	BITAND  shift 65
	LSH  shift 66
	RSH  shift 67
	ADD  shift 69
	SUB  shift 70
	MUL  shift 71
	DIV  shift 72
	MOD  shift 68
	.  reduce 60


174: shift/reduce conflict (shift 181, red'n 35) on ELSE
state 174
	stmt :  IF ( cexpr ) m stmt_    (35)
	stmt :  IF ( cexpr ) m stmt_ELSE n m stmt 

	ELSE  shift 181
	.  reduce 35


state 175
	cexpr :  cexpr_AND m cexpr 
	cexpr :  cexpr AND m cexpr_    (55)
	cexpr :  cexpr_OR m cexpr 

	.  reduce 55


state 176
	cexpr :  cexpr_AND m cexpr 
	cexpr :  cexpr_OR m cexpr 
	cexpr :  cexpr OR m cexpr_    (56)

	AND  shift 146
	.  reduce 56


state 177
	stmt :  WHILE ( m cexpr ) m_s stmt 
	s : _    (24)

	.  reduce 24

	s  goto 182

state 178
	stmt :  DO m s stmt WHILE (_m cexpr ) ; 
	m : _    (25)

	.  reduce 25

	m  goto 183

state 179
	stmt :  FOR ( expro ; m cexpro_; m expro n ) m s stmt 

	;  shift 184
	.  error


state 180
	cexpro :  cexpr_    (48)
	cexpr :  cexpr_AND m cexpr 
	cexpr :  cexpr_OR m cexpr 

	OR  shift 147
	AND  shift 146
	.  reduce 48


state 181
	stmt :  IF ( cexpr ) m stmt ELSE_n m stmt 
	n : _    (26)

	.  reduce 26

	n  goto 185

state 182
	stmt :  WHILE ( m cexpr ) m s_stmt 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	FOR  shift 39
	IF  shift 36
	RETURN  shift 43
	WHILE  shift 37
	DO  shift 38
	CONTINUE  shift 40
	BREAK  shift 41
	GOTO  shift 42
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	;  shift 45
	{  shift 54
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 35
	stmt  goto 186
	block  goto 44

state 183
	stmt :  DO m s stmt WHILE ( m_cexpr ) ; 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	NOT  shift 119
	COM  shift 50
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 118
	cexpr  goto 187

state 184
	stmt :  FOR ( expro ; m cexpro ;_m expro n ) m s stmt 
	m : _    (25)

	.  reduce 25

	m  goto 188

state 185
	stmt :  IF ( cexpr ) m stmt ELSE n_m stmt 
	m : _    (25)

	.  reduce 25

	m  goto 189

state 186
	stmt :  WHILE ( m cexpr ) m s stmt_    (37)

	.  reduce 37


state 187
	stmt :  DO m s stmt WHILE ( m cexpr_) ; 
	cexpr :  cexpr_AND m cexpr 
	cexpr :  cexpr_OR m cexpr 

	OR  shift 147
	AND  shift 146
	)  shift 190
	.  error


state 188
	stmt :  FOR ( expro ; m cexpro ; m_expro n ) m s stmt 
	expro : _    (61)

	ID  shift 82
	CON  shift 52
	STR  shift 53
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	(  shift 51
	.  reduce 61

	lval  goto 47
	expr  goto 123
	expro  goto 191

state 189
	stmt :  IF ( cexpr ) m stmt ELSE n m_stmt 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	FOR  shift 39
	IF  shift 36
	RETURN  shift 43
	WHILE  shift 37
	DO  shift 38
	CONTINUE  shift 40
	BREAK  shift 41
	GOTO  shift 42
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	;  shift 45
	{  shift 54
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 35
	stmt  goto 192
	block  goto 44

state 190
	stmt :  DO m s stmt WHILE ( m cexpr )_; 

	;  shift 193
	.  error


state 191
	stmt :  FOR ( expro ; m cexpro ; m expro_n ) m s stmt 
	n : _    (26)

	.  reduce 26

	n  goto 194

state 192
	stmt :  IF ( cexpr ) m stmt ELSE n m stmt_    (36)

	.  reduce 36


state 193
	stmt :  DO m s stmt WHILE ( m cexpr ) ;_    (38)

	.  reduce 38


state 194
	stmt :  FOR ( expro ; m cexpro ; m expro n_) m s stmt 

	)  shift 195
	.  error


state 195
	stmt :  FOR ( expro ; m cexpro ; m expro n )_m s stmt 
	m : _    (25)

	.  reduce 25

	m  goto 196

state 196
	stmt :  FOR ( expro ; m cexpro ; m expro n ) m_s stmt 
	s : _    (24)

	.  reduce 24

	s  goto 197

state 197
	stmt :  FOR ( expro ; m cexpro ; m expro n ) m s_stmt 

	ID  shift 82
	CON  shift 52
	STR  shift 53
	FOR  shift 39
	IF  shift 36
	RETURN  shift 43
	WHILE  shift 37
	DO  shift 38
	CONTINUE  shift 40
	BREAK  shift 41
	GOTO  shift 42
	BITAND  shift 48
	SUB  shift 49
	COM  shift 50
	;  shift 45
	{  shift 54
	(  shift 51
	.  error

	lval  goto 47
	expr  goto 35
	stmt  goto 198
	block  goto 44

state 198
	stmt :  FOR ( expro ; m cexpro ; m expro n ) m s stmt_    (39)

	.  reduce 39


60/127 terminals, 26/600 nonterminals
95/300 grammar rules, 199/1000 states
1 shift/reduce, 0 reduce/reduce conflicts reported
51/601 working sets used
memory: states,etc. 439/2000, parser 171/4000
48/3001 distinct lookahead sets
98 extra closures
812 shift entries, 2 exceptions
106 goto entries
63 entries saved by goto default
Optimizer space used: input 1812/2000, output 618/4000
618 table entries, 252 zero
maximum spread: 305, maximum offset: 300
